const TON_EVENT = "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";

const ETH_ABI = `{"name":"TokenBurn","inputs":[{"name":"wid","type":"int8"},{"name":"addr","type":"uint256"},{"name":"tokens","type":"uint128"},{"name":"ethereum_address","type":"uint160"}],"outputs":[]}`;

import("../pkg").then(module => {
    const details = module.getDetails(TON_EVENT);
    console.log(details);

    const payload = module.encodePayload(details, ETH_ABI);
    console.log(payload);
}).catch(console.error);
